# --- Instalador Automático de yt-dlp & ffmpeg para Windows ---
# --- @mehsaiah ---

# --- FUNÇÃO DE DOWNLOAD CUSTOMIZADA ---
function Start-DownloadWithProgress {
    param(
        [Parameter(Mandatory=$true)]
        [string]$Uri,
        [Parameter(Mandatory=$true)]
        [string]$OutFile,
        [string]$Title = "Baixando Arquivo"
    )

    $webClient = New-Object System.Net.WebClient
    $stopwatch = New-Object System.Diagnostics.Stopwatch

    # Evento para atualizar a barra de progresso
    $script:bytesDownloaded = 0
    $webClient.DownloadProgressChanged({
        $totalBytes = $_.TotalBytesToReceive
        if ($totalBytes -gt 0) {
            $percentComplete = [math]::Round(($_.BytesReceived / $totalBytes) * 100)
            $downloadedMB = [math]::Round($_.BytesReceived / 1MB, 2)
            $totalMB = [math]::Round($totalBytes / 1MB, 2)
            
            # Calcular velocidade de download
            $elapsedSeconds = $stopwatch.Elapsed.TotalSeconds
            if ($elapsedSeconds -gt 0) {
                $speedKBps = [math]::Round(($_.BytesReceived / 1024) / $elapsedSeconds, 0)
                $status = "Baixado $downloadedMB MB de $totalMB MB ($percentComplete %) - Velocidade: $speedKBps KB/s"
            } else {
                $status = "Baixado $downloadedMB MB de $totalMB MB ($percentComplete %)"
            }
            
            Write-Progress -Activity $Title -Status $status -PercentComplete $percentComplete
        }
    })

    try {
        $stopwatch.Start()
        $webClient.DownloadFileTaskAsync($Uri, $OutFile).Wait()
        $stopwatch.Stop()
        Write-Progress -Activity $Title -Status "Concluído." -Completed
    } catch {
        Write-Host "`n❌ Erro durante o download de '$Uri'. Detalhes: $($_.Exception.Message)" -ForegroundColor Red
        throw # Lança o erro para parar o script
    } finally {
        $webClient.Dispose()
    }
}


# --- INÍCIO DO SCRIPT DE INSTALAÇÃO ---

# 1. DEFINIR CAMINHO DE INSTALAÇÃO E ADICIONAR AO AMBIENTE
$InstallPath = Join-Path $HOME "yt-dlp"
if (-not (Test-Path -Path $InstallPath)) {
    Write-Host "`nCriando diretório de instalação em: $InstallPath"
    New-Item -ItemType Directory -Path $InstallPath
}

$CurrentUserPath = [System.Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::User)
if ($CurrentUserPath -notlike "*$InstallPath*") {
    Write-Host "Adicionando '$InstallPath' ao seu PATH de usuário."
    $NewPath = "$CurrentUserPath;$InstallPath"
    [System.Environment]::SetEnvironmentVariable('Path', $NewPath, [System.EnvironmentVariableTarget]::User)
} else {
    Write-Host "`n✅ Seu PATH já inclui o diretório de destino."
}

# 2. INSTALAR YT-DLP
$YtDlpUrl = "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe"
$YtDlpExePath = Join-Path $InstallPath "yt-dlp.exe"
try {
    Start-DownloadWithProgress -Uri $YtDlpUrl -OutFile $YtDlpExePath -Title "Baixando yt-dlp.exe"
    Write-Host "✅ Download do yt-dlp concluído com sucesso."
} catch {
    return # Para o script se o download falhar
}

# 3. INSTALAR FFMPEG
$FfmpegZipUrl = "https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-master-latest-win64-gpl.zip"
$TempZipFile = Join-Path $env:TEMP "ffmpeg.zip"
$TempExtractPath = Join-Path $env:TEMP "ffmpeg-extraido"
try {
    Start-DownloadWithProgress -Uri $FfmpegZipUrl -OutFile $TempZipFile -Title "Baixando ffmpeg.zip"
    Write-Host "Extraindo arquivos..."
    Expand-Archive -Path $TempZipFile -DestinationPath $TempExtractPath -Force
    $BinDir = Get-ChildItem -Path $TempExtractPath -Directory | Select-Object -First 1
    Copy-Item -Path (Join-Path $BinDir.FullName "bin\ffmpeg.exe") -Destination $InstallPath
    Copy-Item -Path (Join-Path $BinDir.FullName "bin\ffprobe.exe") -Destination $InstallPath
    Write-Host "✅ ffmpeg instalado com sucesso."
} catch {
    Write-Host "❌ Falha ao instalar o ffmpeg." -ForegroundColor Red
} finally {
    Write-Host "Limpando arquivos temporários..."
    if (Test-Path -Path $TempZipFile) { Remove-Item $TempZipFile -Force }
    if (Test-Path -Path $TempExtractPath) { Remove-Item $TempExtractPath -Recurse -Force }
}

# 4. CRIAR ARQUIVO DE CONFIGURAÇÃO (yt-dlp.conf)
Write-Host "`n--- Criando arquivo de configuração padrão ---"
$ConfigContent = @"
# ======================================================
# ARQUIVO DE CONFIGURAÇÃO PADRÃO PARA YT-DLP
# ======================================================
-P "~/Documents/yt-dlp"
-f "bv[vcodec^=hvc1][height>1080]+ba / bv[vcodec^=avc1][height<=1080]+ba / bv*+ba / b"
--remux-video mp4
"@
$ConfPath = Join-Path $InstallPath "yt-dlp.conf"
try {
    Set-Content -Path $ConfPath -Value $ConfigContent
    Write-Host "✅ Arquivo de configuração (yt-dlp.conf) criado com sucesso."
} catch {
    Write-Host "❌ Falha ao criar o arquivo de configuração." -ForegroundColor Red
}

# 5. INSTRUÇÕES FINAIS
Write-Host "`n🎉 Instalação e configuração concluídas!" -ForegroundColor Green
Write-Host "Script por @mehsaiah" -ForegroundColor DarkGray
Write-Host "IMPORTANTE: Você deve REINICIAR seu terminal para que as alterações tenham efeito." -ForegroundColor Yellow
